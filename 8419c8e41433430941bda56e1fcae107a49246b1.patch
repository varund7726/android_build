From 8419c8e41433430941bda56e1fcae107a49246b1 Mon Sep 17 00:00:00 2001
From: tobitege <tobiasteschner@googlemail.com>
Date: Tue, 10 Mar 2015 11:27:47 +0100
Subject: [PATCH] Some enhancements to toolchain handling. Fixed missing slash
 in Makefile.

Change-Id: I8cf8712bad7aea3cd9154c09bb8f709875e13073
---
 core/Makefile                  |   4 ++
 core/binary.mk                 |   8 +--
 core/clang/HOST_x86_common.mk  | 109 +++++++++++++------------------------
 core/clang/config.mk           |   2 +-
 core/combo/TARGET_linux-arm.mk |  24 ++++++---
 core/combo/select.mk           |  17 ++++--
 core/graphite.mk               | 120 +++++++++++++++++++++++++++++++++++++++++
 core/tasks/kernel.mk           |  75 ++++++++++++++++++++------
 envsetup.sh                    |   6 +--
 target/product/full_base.mk    |   2 +-
 tools/roomservice.py           |   5 +-
 11 files changed, 261 insertions(+), 111 deletions(-)

diff --git a/core/Makefile b/core/Makefile
index 33f664c..2bc3970 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -1586,7 +1586,11 @@ ifdef BUILD_NO
 	$(hide) echo "build_number=$(BUILD_NO)" >> $(zip_root)/META/misc_info.txt
 endif
 	$(call generate-userimage-prop-dictionary, $(zip_root)/META/misc_info.txt)
+ifeq ($(TARGET_RELEASETOOL_MAKE_RECOVERY_PATCH_SCRIPT),)
 	$(hide) ./build/tools/releasetools/make_recovery_patch $(zip_root) $(zip_root)
+else
+	$(hide) $(TARGET_RELEASETOOL_MAKE_RECOVERY_PATCH_SCRIPT) $(zip_root) $(zip_root)
+endif
 ifdef PRODUCT_DEFAULT_DEV_CERTIFICATE
 	$(hide) build/tools/getb64key.py $(PRODUCT_DEFAULT_DEV_CERTIFICATE).x509.pem > $(zip_root)/META/releasekey.txt
 else
diff --git a/core/binary.mk b/core/binary.mk
index d85ec81..a95478d 100644
--- a/core/binary.mk
+++ b/core/binary.mk
@@ -112,23 +112,23 @@ endif
 # limitations under the License.
 #
 # Include custom gcc flags.  Seperate them so they can be easily managed.
-ifeq ($(BLISS_STRICT),true)
+ifeq ($(strip $(BLISS_STRICT)),true)
 include $(BUILD_SYSTEM)/strict.mk
 endif
 
-ifeq ($(BLISS_KRAIT),true)
+ifeq ($(strip $(BLISS_KRAIT)),true)
 ifndef LOCAL_IS_HOST_MODULE
 include $(BUILD_SYSTEM)/krait.mk
 endif
 endif
 
 # Supported OS's and ARCH's only
+ifeq ($(strip $(BLISS_GRAPHITE)),true)
 ifeq (linux,$(HOST_OS))
 ifeq (1,$(words $(filter arm arm64,$(TARGET_ARCH))))
 # Do not use graphite on host modules or the clang compiler
 ifndef LOCAL_IS_HOST_MODULE
 ifndef LOCAL_CLANG
-ifeq ($(BLISS_GRAPHITE),true)
 include $(BUILD_SYSTEM)/graphite.mk
 endif
 endif
@@ -136,7 +136,7 @@ endif
 endif
 endif
 
-ifeq ($(BLISS_PIPE),true)
+ifeq ($(strip $(BLISS_PIPE)),true)
 include $(BUILD_SYSTEM)/pipe.mk
 endif
 
diff --git a/core/clang/HOST_x86_common.mk b/core/clang/HOST_x86_common.mk
index 4bb88e8..91b314e 100644
--- a/core/clang/HOST_x86_common.mk
+++ b/core/clang/HOST_x86_common.mk
@@ -11,85 +11,52 @@ CLANG_CONFIG_x86_LINUX_HOST_EXTRA_ASFLAGS := \
   -no-integrated-as
 
 CLANG_CONFIG_x86_LINUX_HOST_EXTRA_CFLAGS := \
-  --gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
-  -no-integrated-as
+	--gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
+	-no-integrated-as
 
-ifneq ($(strip $($(clang_2nd_arch_prefix)HOST_IS_64_BIT)),)
-ifeq ($(BLISSIFY),true)
-CLANG_CONFIG_x86_LINUX_HOST_EXTRA_CPPFLAGS := \
-  --gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
-  --sysroot=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/sysroot \
-  -isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/4.8 \
-  -isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/4.8/x86_64-linux \
-  -isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/4.8/backward \
-  -no-integrated-as
+ifeq ($(strip $(BLISSIFY)),true)
+HOST_TOOLCHAIN_CLANG_VERSION :=4.8
 else
-CLANG_CONFIG_x86_LINUX_HOST_EXTRA_CPPFLAGS := \
-  --gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
-  --sysroot=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/sysroot \
-  -isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/4.6 \
-  -isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/4.6/x86_64-linux \
-  -isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/4.6/backward \
-  -no-integrated-as
+HOST_TOOLCHAIN_CLANG_VERSION :=4.6
 endif
 
-ifeq ($(BLISSIFY),true)
-CLANG_CONFIG_x86_LINUX_HOST_EXTRA_LDFLAGS := \
-  --gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
-  --sysroot=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/sysroot \
-  -B$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/bin \
-  -B$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/lib/gcc/x86_64-linux/4.8 \
-  -L$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/lib/gcc/x86_64-linux/4.8 \
-  -L$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/lib64/ \
-  -no-integrated-as
-else
-CLANG_CONFIG_x86_LINUX_HOST_EXTRA_LDFLAGS := \
-  --gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
-  --sysroot=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/sysroot \
-  -B$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/bin \
-  -B$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/lib/gcc/x86_64-linux/4.6 \
-  -L$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/lib/gcc/x86_64-linux/4.6 \
-  -L$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/lib64/ \
-  -no-integrated-as
-endif
-else
-ifeq ($(BLISSIFY),true)
-CLANG_CONFIG_x86_LINUX_HOST_EXTRA_CPPFLAGS := \
-  --gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
-  --sysroot=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/sysroot \
-  -isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/4.8 \
-  -isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/4.8/x86_64-linux/32 \
-  -isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/4.8/backward \
-  -no-integrated-as
-else
+ifneq ($(strip $($(clang_2nd_arch_prefix)HOST_IS_64_BIT)),)
+
 CLANG_CONFIG_x86_LINUX_HOST_EXTRA_CPPFLAGS := \
-  --gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
-  --sysroot=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/sysroot \
-  -isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/4.6 \
-  -isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/4.6/x86_64-linux/32 \
-  -isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/4.6/backward \
-  -no-integrated-as
-endif
+	--gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
+	--sysroot=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/sysroot \
+	-isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/$(HOST_TOOLCHAIN_CLANG_VERSION) \
+	-isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/$(HOST_TOOLCHAIN_CLANG_VERSION)/x86_64-linux \
+	-isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/$(HOST_TOOLCHAIN_CLANG_VERSION)/backward \
+	-no-integrated-as
 
-ifeq ($(BLISSIFY),true)
 CLANG_CONFIG_x86_LINUX_HOST_EXTRA_LDFLAGS := \
-  --gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
-  --sysroot=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/sysroot \
-  -B$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/bin \
-  -B$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/lib/gcc/x86_64-linux/4.8/32 \
-  -L$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/lib/gcc/x86_64-linux/4.8/32 \
-  -L$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/lib32/ \
-  -no-integrated-as
-else
+	--gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
+	--sysroot=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/sysroot \
+	-B$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/bin \
+	-L$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/lib64/ \
+	-B$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/lib/gcc/x86_64-linux/$(HOST_TOOLCHAIN_CLANG_VERSION) \
+	-L$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/lib/gcc/x86_64-linux/$(HOST_TOOLCHAIN_CLANG_VERSION) \
+	-no-integrated-as
+
+else #ifneq HOST_IS_64_BIT
+
+CLANG_CONFIG_x86_LINUX_HOST_EXTRA_CPPFLAGS := \
+	--gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
+	--sysroot=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/sysroot \
+	-isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/$(HOST_TOOLCHAIN_CLANG_VERSION) \
+	-isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/$(HOST_TOOLCHAIN_CLANG_VERSION)/x86_64-linux/32 \
+	-isystem $($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/include/c++/$(HOST_TOOLCHAIN_CLANG_VERSION)/backward \
+	-no-integrated-as
+
 CLANG_CONFIG_x86_LINUX_HOST_EXTRA_LDFLAGS := \
-  --gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
-  --sysroot=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/sysroot \
-  -B$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/bin \
-  -B$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/lib/gcc/x86_64-linux/4.6/32 \
-  -L$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/lib/gcc/x86_64-linux/4.6/32 \
-  -L$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/lib32/ \
-  -no-integrated-as
-endif
+	--gcc-toolchain=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG) \
+	--sysroot=$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/sysroot \
+	-B$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/bin \
+	-B$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/lib/gcc/x86_64-linux/$(HOST_TOOLCHAIN_CLANG_VERSION)/32 \
+	-L$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/lib/gcc/x86_64-linux/$(HOST_TOOLCHAIN_CLANG_VERSION)/32 \
+	-L$($(clang_2nd_arch_prefix)HOST_TOOLCHAIN_FOR_CLANG)/x86_64-linux/lib32/ \
+	-no-integrated-as
 endif
 endif  # Linux
 
diff --git a/core/clang/config.mk b/core/clang/config.mk
index 6f2b5d2..b6c68b6 100644
--- a/core/clang/config.mk
+++ b/core/clang/config.mk
@@ -44,7 +44,7 @@ CLANG_CONFIG_EXTRA_CFLAGS += \
   -O3 -Qunused-arguments -Wno-unknown-warning-option -D__compiler_offsetof=__builtin_offsetof
 else
 CLANG_CONFIG_EXTRA_CFLAGS += \
-  -D__compiler_offsetof=__builtin_offsetof
+  -Qunused-arguments -Wno-unknown-warning-option -D__compiler_offsetof=__builtin_offsetof
 endif
 # Help catch common 32/64-bit errors.
 CLANG_CONFIG_EXTRA_CFLAGS += \
diff --git a/core/combo/TARGET_linux-arm.mk b/core/combo/TARGET_linux-arm.mk
index a37dad5..99908ed 100644
--- a/core/combo/TARGET_linux-arm.mk
+++ b/core/combo/TARGET_linux-arm.mk
@@ -35,10 +35,10 @@ TARGET_$(combo_2nd_arch_prefix)ARCH_VARIANT := armv5te
 endif
 
 # Decouple NDK library selection with platform compiler version
-$(combo_2nd_arch_prefix)TARGET_NDK_GCC_VERSION := 4.8
+$(combo_2nd_arch_prefix)TARGET_NDK_GCC_VERSION := 4.9
 
 ifeq ($(strip $(TARGET_GCC_VERSION_EXP)),)
-$(combo_2nd_arch_prefix)TARGET_GCC_VERSION := 4.8
+$(combo_2nd_arch_prefix)TARGET_GCC_VERSION := 4.9
 else
 $(combo_2nd_arch_prefix)TARGET_GCC_VERSION := $(TARGET_GCC_VERSION_EXP)
 endif
@@ -67,13 +67,13 @@ $(combo_2nd_arch_prefix)TARGET_STRIP := $($(combo_2nd_arch_prefix)TARGET_TOOLS_P
 
 $(combo_2nd_arch_prefix)TARGET_NO_UNDEFINED_LDFLAGS := -Wl,--no-undefined
 
+$(combo_2nd_arch_prefix)TARGET_arm_CFLAGS :=    -O2 -fomit-frame-pointer -fstrict-aliasing -funswitch-loops
+# Modules can choose to compile some source as thumb.
+$(combo_2nd_arch_prefix)TARGET_thumb_CFLAGS :=  -mthumb -Os -fomit-frame-pointer -fno-strict-aliasing
 
-ifeq ($(BLISS_O3),true)
+ifeq ($(strip $(BLISS_O3)),true)
 $(combo_2nd_arch_prefix)TARGET_arm_CFLAGS := -O3 -DNDEBUG -pipe -fomit-frame-pointer -funswitch-loops -fno-tree-vectorize -fno-inline-functions -fivopts -ffunction-sections -fdata-sections -frename-registers -fomit-frame-pointer -ftracer -Wno-unused-parameter -Wno-unused-but-set-variable -Wno-maybe-uninitialized $(call cc-option,$(-fira-loop-pressure,-fforce-addr,-funsafe-loop-optimizations,-funroll-loops,-ftree-loop-distribution,-fsection-anchors,-ftree-loop-im,-ftree-loop-ivcanon,-ffunction-sections,-fgcse-after-reload,-fgcse-las,-fgcse-sm,-fweb,-ffp-contract=fast))
 $(combo_2nd_arch_prefix)TARGET_thumb_CFLAGS :=  -mthumb -Os -DNDEBUG -pipe -fomit-frame-pointer -fno-strict-aliasing -fno-tree-vectorize -fno-inline-functions -fno-unswitch-loops -fivopts -ffunction-sections -fdata-sections -ftracer -Wno-unused-parameter -Wno-unused-but-set-variable -Wno-maybe-uninitialized -Wno-clobbered -Wno-strict-overflow $(call cc-option,$(-funsafe-loop-optimizations,-funroll-loops,-ftree-loop-distribution,-fsection-anchors,-ftree-loop-im,-ftree-loop-ivcanon,-ffunction-sections,-frename-registers,-frerun-cse-after-loop,-fgcse-las,-fgcse-sm,-fweb,-ffp-contract=fast))
-else
-$(combo_2nd_arch_prefix)TARGET_arm_CFLAGS := -O2 -fomit-frame-pointer -fstrict-aliasing -funswitch-loops
-$(combo_2nd_arch_prefix)TARGET_thumb_CFLAGS := -mthumb -Os -fomit-frame-pointer -fno-strict-aliasing
 endif
 
 # Set FORCE_ARM_DEBUGGING to "true" in your buildspec.mk
@@ -93,7 +93,7 @@ endif
 android_config_h := $(call select-android-config-h,linux-arm)
 
 $(combo_2nd_arch_prefix)TARGET_GLOBAL_CFLAGS += \
-                        -pipe \
+			-pipe \
 			-mfloat-abi=softfp \
 			-ffunction-sections \
 			-fdata-sections \
@@ -118,6 +118,14 @@ TARGET_GLOBAL_CFLAGS += \
 			-frerun-cse-after-loop \
 			-frename-registers $(BOARD_GLOBAL_CFLAGS)
 
+# The "-Wunused-but-set-variable" option often breaks projects that enable
+# "-Wall -Werror" due to a commom idiom "ALOGV(mesg)" where ALOGV is turned
+# into no-op in some builds while mesg is defined earlier. So we explicitly
+# disable "-Wunused-but-set-variable" here.
+ifneq ($(filter 4.6 4.6.% 4.7 4.7.% 4.8 4.8.% 4.9 4.9.%, $($(combo_2nd_arch_prefix)TARGET_GCC_VERSION)),)
+$(combo_2nd_arch_prefix)TARGET_GLOBAL_CFLAGS += -fno-builtin-sin \
+			-fno-strict-volatile-bitfields
+endif
 
 # This is to avoid the dreaded warning compiler message:
 #   note: the mangling of 'va_list' has changed in GCC 4.4
@@ -140,7 +148,7 @@ $(combo_2nd_arch_prefix)TARGET_GLOBAL_LDFLAGS += \
 
 $(combo_2nd_arch_prefix)TARGET_GLOBAL_CFLAGS += -mthumb-interwork
 
-ifeq ($(BLISS_O3),true)
+ifeq ($(strip $(BLISS_O3)),true)
 $(combo_2nd_arch_prefix)TARGET_GLOBAL_CPPFLAGS += -fvisibility-inlines-hidden -O3 -DNDEBUG -pipe -fivopts -ffunction-sections -fdata-sections -funswitch-loops -fomit-frame-pointer -ftracer -Wno-unused-parameter -Wno-unused-but-set-variable -Wno-maybe-uninitialized $(call cpp-option,$(-fira-loop-pressure,-fforce-addr,-funsafe-loop-optimizations,-funroll-loops,-ftree-loop-distribution,-fsection-anchors,-ftree-loop-im,-ftree-loop-ivcanon,-ffunction-sections,-fgcse-las,-fgcse-sm,-fweb,-ffp-contract=fast))
 $(combo_2nd_arch_prefix)TARGET_RELEASE_CFLAGS := -O3 -DNDEBUG -pipe -g -frerun-cse-after-loop -frename-registers -fno-strict-aliasing -fivopts -ffunction-sections -fdata-sections -funswitch-loops -fomit-frame-pointer -ftracer -Wno-unused-parameter -Wno-unused-but-set-variable -Wno-maybe-uninitialized $(call cc-option,$(-fira-loop-pressure,-fforce-addr,-funsafe-loop-optimizations,-funroll-loops,-ftree-loop-distribution,-fsection-anchors,-ftree-loop-im,-ftree-loop-ivcanon,-ffunction-sections,-fgcse-after-reload,-fgcse-las,-fgcse-sm,-fweb,-ffp-contract=fast))
 else
diff --git a/core/combo/select.mk b/core/combo/select.mk
index ef2a011..cbfa7f1 100644
--- a/core/combo/select.mk
+++ b/core/combo/select.mk
@@ -48,17 +48,26 @@ $(combo_var_prefix)HAVE_STRERROR_R_STRRET := 1
 $(combo_var_prefix)HAVE_STRLCPY := 0
 $(combo_var_prefix)HAVE_STRLCAT := 0
 $(combo_var_prefix)HAVE_KERNEL_MODULES := 0
-ifeq ($(BLISS_O3),true)
-$(combo_var_prefix)GLOBAL_CFLAGS := -O3 -DNDEBUG -pipe -fivopts -ffunction-sections -fdata-sections -funswitch-loops -fomit-frame-pointer -ftracer -Wno-unused-parameter -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-exceptions -Wno-multichar $(call cc-option,$(-fira-loop-pressure,-fforce-addr,-funsafe-loop-optimizations,-funroll-loops,-ftree-loop-distribution,-fsection-anchors,-ftree-loop-im,-ftree-loop-ivcanon,-ffunction-sections,-fgcse-las,-fgcse-sm,-fweb,-ffp-contract=fast,-fgraphite,-floop-flatten,-floop-parallelize-all,-ftree-loop-linear,-floop-interchange,-floop-strip-mine,-floop-block))
-$(combo_var_prefix)RELEASE_CFLAGS := -O3 -DNDEBUG -pipe -fivopts -ffunction-sections -fdata-sections -funswitch-loops -fomit-frame-pointer -ftracer -Wno-unused-parameter -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-strict-aliasing $(call cc-option,$(-fira-loop-pressure,-fforce-addr,-funsafe-loop-optimizations,-funroll-loops,-ftree-loop-distribution,-fsection-anchors,-ftree-loop-im,-ftree-loop-ivcanon,-ffunction-sections,-fgcse-las,-fgcse-sm,-fweb,-ffp-contract=fast,-fgraphite,-floop-flatten,-floop-parallelize-all,-ftree-loop-linear,-floop-interchange,-floop-strip-mine,-floop-block))
-$(combo_var_prefix)GLOBAL_CPPFLAGS := -O3 -DNDEBUG -pipe -fivopts -ffunction-sections -fdata-sections -funswitch-loops -fomit-frame-pointer -ftracer -Wno-unused-parameter -Wno-unused-but-set-variable -Wno-maybe-uninitialized $(call cpp-option,$(-fira-loop-pressure,-fforce-addr,-funsafe-loop-optimizations,-funroll-loops,-ftree-loop-distribution,-fsection-anchors,-ftree-loop-im,-ftree-loop-ivcanon,-ffunction-sections,-fgcse-las,-fgcse-sm,-fweb,-ffp-contract=fast,-fgraphite,-floop-flatten,-floop-parallelize-all,-ftree-loop-linear,-floop-interchange,-floop-strip-mine,-floop-block))
+
+ifeq ($(strip $(BLISS_O3)),true)
+$(combo_var_prefix)GLOBAL_CFLAGS := -O3 -DNDEBUG -pipe -fivopts -ffunction-sections -fdata-sections -funswitch-loops -fomit-frame-pointer -ftracer -Wno-unused-parameter -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-exceptions -Wno-multichar $(call cc-option,$(-fira-loop-pressure,-fforce-addr,-funsafe-loop-optimizations,-funroll-loops,-ftree-loop-distribution,-fsection-anchors,-ftree-loop-im,-ftree-loop-ivcanon,-ffunction-sections,-fgcse-las,-fgcse-sm,-fweb,-ffp-contract=fast))
+$(combo_var_prefix)RELEASE_CFLAGS := -O3 -DNDEBUG -pipe -fivopts -ffunction-sections -fdata-sections -funswitch-loops -fomit-frame-pointer -ftracer -Wno-unused-parameter -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-strict-aliasing $(call cc-option,$(-fira-loop-pressure,-fforce-addr,-funsafe-loop-optimizations,-funroll-loops,-ftree-loop-distribution,-fsection-anchors,-ftree-loop-im,-ftree-loop-ivcanon,-ffunction-sections,-fgcse-las,-fgcse-sm,-fweb,-ffp-contract=fast))
+$(combo_var_prefix)GLOBAL_CPPFLAGS := -O3 -DNDEBUG -pipe -fivopts -ffunction-sections -fdata-sections -funswitch-loops -fomit-frame-pointer -ftracer -Wno-unused-parameter -Wno-unused-but-set-variable -Wno-maybe-uninitialized $(call cpp-option,$(-fira-loop-pressure,-fforce-addr,-funsafe-loop-optimizations,-funroll-loops,-ftree-loop-distribution,-fsection-anchors,-ftree-loop-im,-ftree-loop-ivcanon,-ffunction-sections,-fgcse-las,-fgcse-sm,-fweb,-ffp-contract=fast))
 $(combo_var_prefix)GLOBAL_LDFLAGS := -Wl,-O1 -Wl,--as-needed -Wl,--relax -Wl,--sort-common -Wl,--gc-sections
+#tobitege: add graphite flags only in combination with -O3
+ifeq ($(strip $(BLISS_GRAPHITE)),true)
+GRAPHITE_FLAGS := -fgraphite,-floop-flatten,-floop-parallelize-all,-ftree-loop-linear,-floop-interchange,-floop-strip-mine,-floop-block
+$(combo_var_prefix)GLOBAL_CFLAGS += $(call cc-option,$(GRAPHITE_FLAGS))
+$(combo_var_prefix)RELEASE_CFLAGS += $(call cc-option,$(GRAPHITE_FLAGS))
+$(combo_var_prefix)GLOBAL_CPPFLAGS += $(call cc-option,$(GRAPHITE_FLAGS))
+endif
 else
 $(combo_var_prefix)GLOBAL_CFLAGS := -fno-exceptions -Wno-multichar
 $(combo_var_prefix)RELEASE_CFLAGS := -O2 -g -fno-strict-aliasing
 $(combo_var_prefix)GLOBAL_CPPFLAGS :=
 $(combo_var_prefix)GLOBAL_LDFLAGS :=
 endif
+
 $(combo_var_prefix)GLOBAL_ARFLAGS := crsPD
 $(combo_var_prefix)GLOBAL_LD_DIRS :=
 
diff --git a/core/graphite.mk b/core/graphite.mk
index 081cd49..8b3944b 100644
--- a/core/graphite.mk
+++ b/core/graphite.mk
@@ -13,6 +13,126 @@
 # limitations under the License.
 #
 
+# Force disable some modules that are not compatible with graphite flags.
+# Add more modules if needed for devices in BoardConfig.mk
+# LOCAL_DISABLE_GRAPHITE +=
+LOCAL_DISABLE_GRAPHITE := \
+  libmincrypt \
+  mkbootimg \
+  mkbootfs \
+  libhost \
+  ibext2_profile \
+  make_ext4fs \
+  hprof-conv \
+  acp \
+  libsqlite \
+  libsqlite_jni \
+  simg2img_host \
+  e2fsck \
+  append2simg \
+  build_verity_tree \
+  sqlite3 \
+  e2fsck_host \
+  libext2_profile_host \
+  libext2_quota_host \
+  libext2fs_host\
+  libbz\
+  make_f2fs\
+  imgdiff\
+  bsdiff \
+  libedify \
+  fs_config \
+  unpackbootimg \
+  mkyaffs2image \
+  libext2_com_err_host \
+  libext2_blkid_host \
+  libext2_e2p_host\
+  libcrypto-host \
+  libexpat-host \
+  libicuuc-host \
+  libicui18n-host \
+  dmtracedump \
+  libsparse_host \
+  libz-host \
+  libfdlibm \
+  libsqlite3_android \
+  libssl-host \
+  libf2fs_dlutils_host \
+  libf2fs_utils_host \
+  libf2fs_ioutils_host \
+  libf2fs_fmt_host_dyn \
+  libext2_uuid_host \
+  minigzip \
+  libdex \
+  dexdump \
+  dexlist \
+  libext4_utils_host \
+  third_party_protobuf_protoc_arm_host_gyp \
+  libaapt \
+  aapt \
+  fastboot  \
+  libpng \
+  aprotoc \
+  fio \
+  fsck.f2fs \
+  libandroidfw \
+  libbacktrace_test \
+  liblog \
+  libgtest_host \
+  libbacktrace_libc++ \
+  v8_tools_gyp_v8_nosnapshot_arm_host_gyp \
+  third_party_icu_icui18n_arm_host_gyp \
+  third_party_icu_icuuc_arm_host_gyp \
+  tird_party_protobuf_protobuf_full_do_not_use_arm_host_gyp \
+  third_party_protobuf_protobuf_full_do_not_use_arm_host_gyp \
+  v8_tools_gyp_mksnapshot_arm_host_gyp \
+  third_party_libvpx_libvpx_obj_int_extract_arm_host_gyp \
+  libutils \
+  libcutils \
+  libexpat \
+  v8_tools_gyp_v8_base_arm_host_gyp \
+  v8_tools_gyp_v8_libbase_arm_host_gyp \
+  v8_tools_gyp_v8_libbase_arm_host_gyp_32 \
+  aidl \
+  libziparchive-host \
+  libcrypto_static \
+  libunwind-ptrace \
+  libgtest_main_host \
+  libbacktrace \
+  backtrace_test \
+  libzopfli \
+  zipalign \
+  rsg-generator \
+  unrar \
+  libunz \
+  adb \
+  libzipfile \
+  rsg-generator_support \
+  libunwindbacktrace \
+  libc_common \
+  libz \
+  libselinux \
+  checkfc \
+  checkseapp \
+  checkpolicy \
+  libsepol \
+  libpcre \
+  libunwind \
+  libFFTEm \
+  libicui18n \
+  libskia \
+  libvpx \
+  libmedia_jni \
+  libstagefright_mp3dec \
+  libart \
+  mdnsd \
+  libwebrtc_spl \
+  third_party_WebKit_Source_core_webcore_svg_gyp \
+  libjni_filtershow_filters \
+  libavformat \
+  libavcodec \
+  skia_skia_library_gyp
+
 ifneq (1,$(words $(filter $(LOCAL_DISABLE_GRAPHITE),$(LOCAL_MODULE))))
 ifdef LOCAL_CONLYFLAGS
 LOCAL_CONLYFLAGS += $(GRAPHITE_FLAGS)
diff --git a/core/tasks/kernel.mk b/core/tasks/kernel.mk
index 27fa3b3..11893c9 100644
--- a/core/tasks/kernel.mk
+++ b/core/tasks/kernel.mk
@@ -13,6 +13,9 @@
 # limitations under the License.
 
 # Android makefile to build kernel as a part of Android Build
+$(info   -------------------------------------------------------)
+$(info   ---------------- KERNEL.MK START ----------------------)
+$(info   -------------------------------------------------------)
 
 TARGET_AUTO_KDIR := $(shell echo $(TARGET_DEVICE_DIR) | sed -e 's/^device/kernel/g')
 
@@ -143,39 +146,65 @@ KERNEL_HEADERS_INSTALL := $(KERNEL_OUT)/usr
 KERNEL_MODULES_INSTALL := system
 KERNEL_MODULES_OUT := $(TARGET_OUT)/lib/modules
 
+ifeq ($(KERNEL_TOOLCHAIN),)
+KERNEL_TOOLCHAIN := $(ARM_EABI_TOOLCHAIN)
+endif
+
+#tobitege: default empty TARGET_TC_KERNEL:
+ifeq ($(TARGET_TC_KERNEL),)
+  $(info   TARGET_TC_KERNEL DEFAULTED TO "4.9-sm"!)
+  TARGET_TC_KERNEL := 4.9-sm
+endif
+ifneq ($(TARGET_KERNEL_CROSS_COMPILE_PREFIX),)
+  TARGET_KERNEL_XPRE := true
+endif
+
 TARGET_KERNEL_CROSS_COMPILE_PREFIX := $(strip $(TARGET_KERNEL_CROSS_COMPILE_PREFIX))
 ifeq ($(TARGET_KERNEL_CROSS_COMPILE_PREFIX),)
-ifeq ($(KERNEL_TOOLCHAIN_PREFIX),)
-KERNEL_TOOLCHAIN_PREFIX := arm-eabi-
-endif
+  ifeq ($(KERNEL_TOOLCHAIN_PREFIX),)
+    KERNEL_TOOLCHAIN_PREFIX := arm-eabi-
+  endif
 else
-KERNEL_TOOLCHAIN_PREFIX := $(TARGET_KERNEL_CROSS_COMPILE_PREFIX)
+  KERNEL_TOOLCHAIN_PREFIX := $(TARGET_KERNEL_CROSS_COMPILE_PREFIX)
 endif
 
 ifeq ($(KERNEL_TOOLCHAIN),)
-KERNEL_TOOLCHAIN_PATH := $(KERNEL_TOOLCHAIN_PREFIX)
+  KERNEL_TOOLCHAIN_PATH := $(KERNEL_TOOLCHAIN_PREFIX)
 else
-ifneq ($(KERNEL_TOOLCHAIN_PREFIX),)
-KERNEL_TOOLCHAIN_PATH := $(KERNEL_TOOLCHAIN)/$(KERNEL_TOOLCHAIN_PREFIX)
-endif
+  ifneq ($(KERNEL_TOOLCHAIN_PREFIX),)
+    KERNEL_TOOLCHAIN_PATH := $(KERNEL_TOOLCHAIN)/$(KERNEL_TOOLCHAIN_PREFIX)
+  endif
 endif
 
 ifneq ($(USE_CCACHE),)
-    ccache := $(ANDROID_BUILD_TOP)/prebuilts/misc/$(HOST_PREBUILT_TAG)/ccache/ccache
-    # Check that the executable is here.
-    ccache := $(strip $(wildcard $(ccache)))
+  ccache := $(ANDROID_BUILD_TOP)/prebuilts/misc/$(HOST_PREBUILT_TAG)/ccache/ccache
+  # Check that the executable is here.
+  ccache := $(strip $(wildcard $(ccache)))
 endif
 
-ifneq ($(TARGET_TC_KERNEL),)
-  ifeq ($(HOST_OS),darwin)
-    KERNEL_CROSS_COMPILE := CROSS_COMPILE="$(ANDROID_BUILD_TOP)/prebuilts/gcc/darwin-x86/arm/arm-eabi-$(TARGET_TC_KERNEL)/bin/arm-eabi-"
+ifneq ($(TARGET_KERNEL_XPRE),true)
+  ifneq ($(TARGET_TC_KERNEL),)
+    ifeq ($(HOST_OS),darwin)
+      KERNEL_CROSS_COMPILE := CROSS_COMPILE="$(ANDROID_BUILD_TOP)/prebuilts/gcc/darwin-x86/arm/arm-eabi-$(TARGET_TC_KERNEL)/bin/arm-eabi-"
+    else
+      KERNEL_CROSS_COMPILE := CROSS_COMPILE="$(ANDROID_BUILD_TOP)/prebuilts/gcc/linux-x86/arm/arm-eabi-$(TARGET_TC_KERNEL)/bin/arm-eabi-"  
+    endif
   else
-    KERNEL_CROSS_COMPILE := CROSS_COMPILE="$(ANDROID_BUILD_TOP)/prebuilts/gcc/linux-x86/arm/arm-eabi-$(TARGET_TC_KERNEL)/bin/arm-eabi-"
+    $(error   ----------------- KERNEL TOOLCHAIN WRONG! -------------------------)
   endif
 else
   KERNEL_CROSS_COMPILE := CROSS_COMPILE="$(ccache) $(KERNEL_TOOLCHAIN_PATH)"
 endif
 
+$(info   -------------------------------------------------------)
+$(info   ----------------- KERNEL INFO -------------------------)
+$(info   -------------------------------------------------------)
+$(info   KERNEL_TOOLCHAIN_PREFIX=$(KERNEL_TOOLCHAIN_PREFIX))
+$(info   KERNEL_TOOLCHAIN=$(KERNEL_TOOLCHAIN))
+$(info   KERNEL_TOOLCHAIN_PATH=$(KERNEL_TOOLCHAIN_PATH))
+$(info   KERNEL_CROSS_COMPILE=$(KERNEL_CROSS_COMPILE))
+$(info   -------------------------------------------------------)
+
 ccache =
 
 define mv-modules
@@ -195,6 +224,19 @@ define clean-module-folder
     fi
 endef
 
+ifeq ($(TARGET_ARCH),arm)
+    ifneq ($(USE_CCACHE),)
+      ccache := $(ANDROID_BUILD_TOP)/prebuilts/misc/$(HOST_PREBUILT_TAG)/ccache/ccache
+      # Check that the executable is here.
+      ccache := $(strip $(wildcard $(ccache)))
+    endif
+    ARM_CROSS_COMPILE:=CROSS_COMPILE="$(ccache) $(KERNEL_TOOLCHAIN)/$(KERNEL_TOOLCHAIN_PREFIX)"
+    ccache = 
+endif
+
+# Clear this first to prevent accidental poisoning from env
+MAKE_FLAGS :=
+
 ifeq ($(HOST_OS),darwin)
   MAKE_FLAGS += C_INCLUDE_PATH=$(ANDROID_BUILD_TOP)/external/elfutils/0.153/libelf/
 endif
@@ -264,3 +306,6 @@ $(file) : $(KERNEL_BIN) | $(ACP)
 
 ALL_PREBUILT += $(INSTALLED_KERNEL_TARGET)
 endif
+$(info   -------------------------------------------------------)
+$(info   ---------------- KERNEL.MK END ------------------------)
+$(info   -------------------------------------------------------)
diff --git a/envsetup.sh b/envsetup.sh
index 3d0e475..cd5412d 100644
--- a/envsetup.sh
+++ b/envsetup.sh
@@ -530,7 +530,7 @@ function brunch()
 {
     breakfast $*
     if [ $? -eq 0 ]; then
-        mka bacon
+        time mka bacon
     else
         echo "No such item in brunch menu. Try 'breakfast'"
         return 1
@@ -565,10 +565,6 @@ function breakfast()
             if [ -z "$variant" ]; then
                 variant="userdebug"
             fi
-            # This is probably just the BLISS model name
-            if [ -z "$variant" ]; then
-                variant="userdebug"
-            fi
             lunch bliss_$target-$variant
         fi
     fi
diff --git a/target/product/full_base.mk b/target/product/full_base.mk
index a0e72a4..10dcd3e 100644
--- a/target/product/full_base.mk
+++ b/target/product/full_base.mk
@@ -25,7 +25,7 @@ PRODUCT_PACKAGES := \
 
 # Additional settings used in all AOSP builds
 PRODUCT_PROPERTY_OVERRIDES := \
-    ro.com.android.dateformat=MM-dd-yyyy
+    ro.com.android.dateformat=MM-dd-yyyy \
     ro.config.ringtone=Triton.ogg \
     ro.config.notification_sound=Io.ogg
 
diff --git a/tools/roomservice.py b/tools/roomservice.py
index 3663175..0528f2a 100755
--- a/tools/roomservice.py
+++ b/tools/roomservice.py
@@ -105,7 +105,8 @@ def iterate_manifests(check_all):
     files = []
     if check_all:
         for file in os.listdir(local_manifest_dir):
-            files.append(os.path.join(local_manifest_dir, file))
+            if file.endswith('.xml'):
+                files.append(os.path.join(local_manifest_dir, file))
     files.append('.repo/manifest.xml')
     for file in files:
         try:
@@ -219,7 +220,7 @@ def parse_device_from_folder(device):
     elif len(search) == 1:
         location = search[0]
     else:
-        print("you device can't be found in device sources..")
+        print("your device can't be found in device sources..")
         location = parse_device_from_manifest(device)
     return location
 
